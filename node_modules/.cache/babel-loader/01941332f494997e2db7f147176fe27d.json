{"ast":null,"code":"import _classCallCheck from \"/home/c-zentrix/Documents/forms/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/c-zentrix/Documents/forms/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/c-zentrix/Documents/forms/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/c-zentrix/Documents/forms/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/c-zentrix/Documents/forms/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/c-zentrix/Documents/forms/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/c-zentrix/Documents/forms/src/Input.js\";\nimport React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nvar currencies = [{\n  value: \"USD\",\n  label: \"$\"\n}, {\n  value: \"EUR\",\n  label: \"€\"\n}, {\n  value: \"BTC\",\n  label: \"฿\"\n}, {\n  value: \"JPY\",\n  label: \"¥\"\n}];\n\nvar InputBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputBuilder, _Component);\n\n  function InputBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, InputBuilder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputBuilder).call(this, props));\n    _this.changeValue = _this.changeValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(InputBuilder, [{\n    key: \"changeValue\",\n    value: function changeValue(event) {\n      console.log(event.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$params = this.props.params,\n          type = _this$props$params.type,\n          name = _this$props$params.name,\n          classname = _this$props$params.classname,\n          placeholder = _this$props$params.placeholder,\n          inputProps = _this$props$params.inputProps,\n          elementType = _this$props$params.elementType,\n          variant = _this$props$params.variant;\n      console.log(\"key\", this.props.id);\n      var Element = \"\";\n\n      switch (elementType) {\n        case \"radio\":\n          Element = React.createElement(Radio, {\n            value: \"b\",\n            key: this.props.id,\n            onChange: this.changeValue,\n            id: name,\n            name: name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          });\n          break;\n\n        case \"textfield\":\n          Element = React.createElement(TextField, {\n            key: this.props.id,\n            onChange: this.changeValue,\n            id: name,\n            label: name,\n            name: name,\n            type: type,\n            placeholder: placeholder,\n            inputProps: inputProps,\n            variant: variant,\n            margin: \"normal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          });\n          break;\n\n        case \"textfield-select\":\n          Element = React.createElement(TextField, {\n            id: name,\n            select: true,\n            label: name,\n            helperText: placeholder,\n            margin: \"normal\",\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, currencies.map(function (option) {\n            return React.createElement(MenuItem, {\n              key: option.value,\n              value: option.value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            }, option.label);\n          }));\n          break;\n\n        case \"textfield-date\":\n          Element = React.createElement(TextField, {\n            id: name,\n            label: name,\n            name: name,\n            type: type,\n            placeholder: placeholder,\n            inputProps: inputProps,\n            InputLabelProps: {\n              shrink: inputProps.shrink\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          });\n          break;\n      }\n\n      return React.createElement(\"div\", {\n        className: classname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, Element);\n    }\n  }]);\n\n  return InputBuilder;\n}(Component);\n\nexport default InputBuilder;","map":{"version":3,"sources":["/home/c-zentrix/Documents/forms/src/Input.js"],"names":["React","Component","TextField","Radio","MenuItem","currencies","value","label","InputBuilder","props","changeValue","bind","event","console","log","target","params","type","name","classname","placeholder","inputProps","elementType","variant","id","Element","shrink","map","option"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nconst currencies = [\n  {\n    value: \"USD\",\n    label: \"$\"\n  },\n  {\n    value: \"EUR\",\n    label: \"€\"\n  },\n  {\n    value: \"BTC\",\n    label: \"฿\"\n  },\n  {\n    value: \"JPY\",\n    label: \"¥\"\n  }\n];\n\nclass InputBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.changeValue = this.changeValue.bind(this);\n  }\n\n  changeValue(event) {\n    console.log(event.target.value);\n  }\n\n  render() {\n    const {\n      type,\n      name,\n      classname,\n      placeholder,\n      inputProps,\n      elementType,\n      variant\n    } = this.props.params;\n    console.log(\"key\", this.props.id);\n    let Element = \"\";\n    switch (elementType) {\n      case \"radio\":\n        Element = (\n          <Radio\n            value=\"b\"\n            key={this.props.id}\n            onChange={this.changeValue}\n            id={name}\n            name={name}\n          />\n        );\n        break;\n      case \"textfield\":\n        Element = (\n          <TextField\n            key={this.props.id}\n            onChange={this.changeValue}\n            id={name}\n            label={name}\n            name={name}\n            type={type}\n            placeholder={placeholder}\n            inputProps={inputProps}\n            variant={variant}\n            margin=\"normal\"\n          />\n        );\n        break;\n      case \"textfield-select\":\n        Element = (\n          <TextField\n            id={name}\n            select\n            label={name}\n            helperText={placeholder}\n            margin=\"normal\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          >\n            {currencies.map(option => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n        );\n        break;\n\n      case \"textfield-date\":\n        Element = (<TextField\n          id={name}\n          label={name}\n          name={name}\n          type={type}\n          placeholder={placeholder}\n          inputProps={inputProps}\n          InputLabelProps={{\n            shrink: inputProps.shrink,\n          }}\n      />);\n      break;\n    }\n    return <div className={classname}>{Element}</div>;\n  }\n}\n\nexport default InputBuilder;\n"]},"metadata":{},"sourceType":"module"}