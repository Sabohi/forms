{"ast":null,"code":"var _jsxFileName = \"/home/c-zentrix/Documents/forms/src/InputBuilder.js\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nvar InputBuilder = function InputBuilder(props) {\n  var inputElement = null;\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = React.createElement(TextField, Object.assign({\n        error: props.errorValue === false && props.touched !== false,\n        onChange: props.changed\n      }, props.elementConfig, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n      break;\n\n    case \"textarea\":\n      inputElement = React.createElement(\"textarea\", Object.assign({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n      break;\n\n    case \"select\":\n      inputElement = React.createElement(TextField, Object.assign({\n        select: true,\n        value: props.value\n      }, props.elementConfig.configs, {\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), props.elementConfig.options.map(function (option) {\n        return React.createElement(MenuItem, {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, option.displayValue);\n      }));\n      break;\n\n    case \"radio\":\n      inputElement = React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, props.elementConfig.configs.label), React.createElement(RadioGroup, Object.assign({}, props.elementConfig.configs, {\n        onChange: props.changed,\n        value: props.value,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), props.elementConfig.options.map(function (option) {\n        return React.createElement(FormControlLabel, Object.assign({\n          key: option.value\n        }, option, {\n          control: React.createElement(Radio, {\n            color: props.elementConfig.configs.color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }));\n      })));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, props.label), inputElement);\n};\n\nexport default InputBuilder;","map":{"version":3,"sources":["/home/c-zentrix/Documents/forms/src/InputBuilder.js"],"names":["React","TextField","MenuItem","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","InputBuilder","props","inputElement","elementType","errorValue","touched","changed","elementConfig","value","configs","options","map","option","displayValue","label","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nconst InputBuilder = props => {\n  let inputElement = null;\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <TextField\n          error={props.errorValue === false && props.touched !== false}\n          onChange={props.changed}\n          {...props.elementConfig}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <TextField\n          select\n          value={props.value}\n          {...props.elementConfig.configs}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.displayValue}\n            </MenuItem>\n          ))}\n        </TextField>\n      );\n      break;\n    case \"radio\":\n      inputElement = (\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">\n            {props.elementConfig.configs.label}\n          </FormLabel>\n          <RadioGroup\n            {...props.elementConfig.configs}\n            onChange={props.changed}\n            value={props.value}\n            row\n          >\n            {props.elementConfig.options.map(option => (\n              <FormControlLabel\n                key={option.value}\n                {...option}\n                control={<Radio color={props.elementConfig.configs.color} />}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n  }\n\n  return (\n    <div>\n      <label>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default InputBuilder;\n"]},"metadata":{},"sourceType":"module"}